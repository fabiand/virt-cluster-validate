#!/usr/bin/bash

#mkdir /tmp/app
#pushd /tmp/app

#curl -sL http://downloads.openshift-console.svc.cluster.local/amd64/linux/oc.tar | tar xf -
#curl -sL http://hyperconverged-cluster-cli-download.openshift-cnv.svc.cluster.local:8080/amd64/linux/virtctl.tar.gz | tar xfz -
export PATH=$PATH:$PWD

c() { echo "# $@" ; }
n() { echo "" ; }
x() { echo "\$ $@" ; eval "$@" ; }
red() { echo -e "\e[0;31m$@\e[0m" ; }
green() { echo -e "\e[0;32m$@\e[0m" ; }
die() { red "FATAL: $@" ; exit 1 ; }
assert() { echo "(assert:) \$ $@" ; eval $@ || { echo "(assert?) FALSE" ; die "Assertion ret 0 failed: '$@'" ; } ; green "(assert?) True" ; }

pass() { export PASS=true; }
fail_with() { export PASS=false; export FAIL_MESSAGE="$@" ; return 1 ; }

#      oc get -n openshift-cnv hyperconverged hyperconverged

main() {
  RESULTSD="$PWD/run-$(date +%F-%T).d"

  mkdir $RESULTSD
  cd tasks.d

  c "Tasks: $PWD"
  c "Results: $RESULTSD"
  c "Starting validation ..."

  ls -1 . | while read TASK;
  do
  {
    source $TASK

    TASK_RESULTS="${RESULTSD}/${TASK}.log"
    TASK_CONCLUSION="${RESULTSD}/${TASK}.conclusion"
    DISPLAYNAME=${DISPLAYNAME:-$TASK}
    PASS=true

    #{
    #  run
    #  cleanup
    #} > $TASK_RESULTS 2>&1

    {
      if $PASS;
      then
        c "$DISPLAYNAME: $(green PASS)"
      else
        c "$DISPLAYNAME: $(red FAIL)"
        echo -e "  $FAIL_MESSAGE"
      fi
    } > $TASK_CONCLUSION
  } &
  done
  wait
  cat ${RESULTSD}/*.conclusion
}


main
